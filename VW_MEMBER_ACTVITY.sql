/****** Object:  View [dbo].[VW_MEMBER_ACTIVITY]    Script Date: 06-02-2020 23:53:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER view [dbo].[VW_MEMBER_ACTIVITY]
AS
--Fetch the Member activity data from starting to all the calender months
WITH [MEMBER_STARTING_ACTVITY_CROSS_CALENDER]
AS
(SELECT
		MEMBER_ID
	   ,MIN_ACTIVITY_YEAR_MONTH
	   ,CALENDAR_YEAR_MONTH
	FROM (SELECT
			MEMBER_ID
		   ,MIN(ACTIVITY_YEAR_MONTH) AS MIN_ACTIVITY_YEAR_MONTH
		FROM REVENUE_ANALYSIS
		WHERE BANK_TYPE_ID = 0
		GROUP BY MEMBER_ID) AS A
	CROSS APPLY (SELECT DISTINCT
			CALENDAR_YEAR_MONTH
		FROM CALENDAR
		WHERE CALENDAR_YEAR_MONTH >= A.min_ACTIVITY_YEAR_MONTH) AS B)

--Fetch the Member Compete activity data from starting to all the calender months
,
[MEMBER_COMPLETE_ACTVITY]
AS
(
SELECT
		A.MEMBER_ID
	   ,min_ACTIVITY_YEAR_MONTH
	   ,CALENDAR_YEAR_MONTH
	   ,ACTIVITY_YEAR_MONTH
	   ,CAST(CAST(min_ACTIVITY_YEAR_MONTH AS VARCHAR)+'01' AS DATE) AS DATE_START_ACTIVITY_YEAR_MONTH
,CAST(CAST(CALENDAR_YEAR_MONTH AS VARCHAR)+'01' AS DATE) AS DATE_CALENDAR_YEAR_MONTH
,CAST(CAST(ACTIVITY_YEAR_MONTH AS VARCHAR)+'01' AS DATE) AS DATE_ACTIVITY_YEAR_MONTH

	   ,MAX(CASE
			WHEN ACTIVITY_YEAR_MONTH IS NOT NULL THEN ACTIVITY_YEAR_MONTH
		END)

		OVER (PARTITION BY A.MEMBER_ID ORDER BY A.MEMBER_ID,A.CALENDAR_YEAR_MONTH

		ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) MAX_ACTIVITY_YEAR_MONTH

	FROM [MEMBER_STARTING_ACTVITY_CROSS_CALENDER] AS A
	LEFT JOIN (SELECT DISTINCT
			MEMBER_ID
		   ,ACTIVITY_YEAR_MONTH
		FROM REVENUE_ANALYSIS
		WHERE BANK_TYPE_ID = 0) AS B
		ON A.MEMBER_ID = B.MEMBER_ID
		AND A.CALENDAR_YEAR_MONTH = B.ACTIVITY_YEAR_MONTH
)
,[PREFINAL_DATA]
AS
(
SELECT *, ABS(DATEDIFF(MONTH,ISNULL(DATE_ACTIVITY_YEAR_MONTH,DATE_CALENDAR_YEAR_MONTH),DATE_LAST_ACTIVITY_YEAR_MONTH)+1) AS Last_ActiveMonthsCount 
FROM 
(
SELECT *,CAST(CAST(LAST_ACTIVITY_YEAR_MONTH AS VARCHAR)+'01' AS DATE) AS DATE_LAST_ACTIVITY_YEAR_MONTH
FROM 
(
SELECT *,LAG (MAX_ACTIVITY_YEAR_MONTH) OVER (PARTITION BY MEMBER_ID ORDER BY MEMBER_ID,CALENDAR_YEAR_MONTH) AS LAST_ACTIVITY_YEAR_MONTH 
FROM [MEMBER_COMPLETE_ACTVITY]
) AS A
) AS B
)
,[FINAL_DATA]
AS
(
SELECT *,CASE 
WHEN DATE_START_ACTIVITY_YEAR_MONTH=DATE_CALENDAR_YEAR_MONTH THEN 'New'
WHEN DATE_ACTIVITY_YEAR_MONTH IS NOT NULL AND Last_ActiveMonthsCount=0 THEN 'Retained' 
WHEN DATE_ACTIVITY_YEAR_MONTH IS  NULL AND Last_ActiveMonthsCount=0 THEN 'Unretained' 
WHEN DATE_ACTIVITY_YEAR_MONTH IS NOT NULL AND Last_ActiveMonthsCount>0 THEN 'Reactivated' 
WHEN DATE_ACTIVITY_YEAR_MONTH IS  NULL AND Last_ActiveMonthsCount>0 THEN 'Lapsed' 
END AS MEMBER_LIFECYCLE_STATUS, CASE WHEN DATE_ACTIVITY_YEAR_MONTH IS  NULL AND Last_ActiveMonthsCount>0 THEN  Last_ActiveMonthsCount ELSE 0 END AS LAPSED_MONTHS
FROM [PREFINAL_DATA]
)

SELECT MEMBER_ID,CALENDAR_YEAR_MONTH,MEMBER_LIFECYCLE_STATUS,LAPSED_MONTHS
FROM [FINAL_DATA]
GO
